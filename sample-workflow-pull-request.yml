# This is a basic workflow to help you get started with Using Checkmarx CxFlow Action

name: CxFlow

on: # Controls when the action will run. Triggers the workflow on pull request events but only for the master branch
  pull_request:
    types: [opened, reopened, synchronize] #Types specify which pull request events will trigger the workflow. For more events refer Github Actions documentation.
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel - this job is specifically configured to use the Checkmarx CxFlow Action
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on - Ubuntu is required as Docker is leveraged for the action
    runs-on: ubuntu-latest

    # Steps require - checkout code, run CxFlow Action, Upload SARIF report (optional)
    steps:
    # Extracts the pull request number from GitHub's environment variables and stores in another env variable.
    - name: Get the Pull Request Number
      run: echo ::set-env name=PR_NUMBER::$(echo "$GITHUB_REF" | awk -F / '{print $3}')
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout the code
      uses: actions/checkout@v2
    # Runs the Checkmarx Scan leveraging the latest version of CxFlow - REFER to Action README for list of inputs
    - name: Checkmarx CxFlow Action
      uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.0-9.x #Github Action version for 9.x
      with:
        project: GithubActionTest
        team: '/CxServer/SP/Checkmarx'
        checkmarx_url: ${{ secrets.CHECKMARX_URL }}
        checkmarx_username: ${{ secrets.CHECKMARX_USERNAME }}
        checkmarx_password: ${{ secrets.CHECKMARX_PASSWORD }}
        checkmarx_client_secret: ${{ secrets.CHECKMARX_CLIENT_SECRET }}
        github_token: ${{ secrets.GH_TOKEN }}
        params: --namespace=<GitHubNamespace> --repo-name=<RepoName>  --branch=master --bug-tracker=GITHUBPULL --merge-id=${{ env.PR_NUMBER }}
